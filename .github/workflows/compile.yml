# 工作流名称
name: 编译报告并发布到 Release (Compile and Release PDFs)

# 触发条件：推送到 master 分支时
on:
  push:
    branches:
      - master

# 工作流任务
jobs:
  build_and_release:
    # 运行环境
    runs-on: ubuntu-latest
    
    # 授予工作流写入仓库内容的权限，这是创建 Release 所必需的
    permissions:
      contents: write

    steps:
      # 第一步：检出仓库代码
      - name: 检出仓库代码 (Checkout repository)
        uses: actions/checkout@v4

      # 第二步：安装完整的 TeX Live 环境
      - name: 安装 TeX Live (Set up TeX Live)
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full

      # 第三步：编译所有符合条件的 .tex 文件
      - name: 编译 LaTeX 文件 (Compile LaTeX files)
        run: |
          # 创建一个目录存放编译好的 PDF
          mkdir -p compiled_reports
          # 查找并编译所有非 template 的 .tex 文件
          for file in $(find . -type f -name "*.tex" ! -path "./template/*" ! -name "template.tex"); do
            echo "正在编译: $file"
            # 使用 latexmk 进行高效编译，并将输出文件放入 compiled_reports 目录
            # -output-directory=... 参数可以很好地管理输出文件
            latexmk -pdf -output-directory=compiled_reports -cd "$file"
          done

      # 第四步：创建或更新 Release 并上传 PDF
      # 使用社区广受好评的 release-action
      - name: 创建/更新 Release 并上传PDF (Create/Update Release and Upload PDFs)
        uses: softprops/action-gh-release@v2
        with:
          # 使用一个固定的标签名，这样每次运行都会更新同一个 Release
          tag_name: latest-reports
          # Release 的标题
          name: 最新实验报告 (Latest Reports)
          # Release 的描述内容
          body: |
            自动编译生成的最新实验报告PDF。
            此 Release 由 GitHub Action 自动更新。
          # 标记为预发布，以区别于正式的版本发布
          prerelease: true
          # 指定要上传的文件，即 compiled_reports 目录下的所有 PDF
          files: compiled_reports/*.pdf
