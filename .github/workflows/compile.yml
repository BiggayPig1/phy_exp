# 工作流名称
name: 编译报告并发布到 Release (Compile and Release PDFs)

# 触发条件：推送到 master 分支时
on:
  push:
    branches:
      - master

# 工作流任务
jobs:
  build_and_release:
    # 运行环境
    runs-on: ubuntu-latest
    
    # 授予工作流写入仓库内容的权限
    permissions:
      contents: write

    steps:
      # 第 1 步：检出仓库代码
      - name: 检出仓库代码 (Checkout repository)
        uses: actions/checkout@v2

      # 第 2 步：安装字体、替换字体名并编译所有文件
      - name: 安装字体、替换并编译 (Install, Replace & Compile)
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            apk update && apk add --no-cache font-noto-cjk
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/SimSun/Noto Serif CJK SC/g' {} +
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/SimHei/Noto Sans CJK SC/g' {} +
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/KaiTi/Noto Serif CJK SC/g' {} +
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/FangSong/Noto Serif CJK SC/g' {} +
            mkdir -p compiled_reports
            for file in $(find . -type f -name "*.tex" ! -path "./template/*" ! -path "./大学物理实验-实验报告/*" ! -name "template.tex"); do
              echo "正在编译: $file"
              latexmk -xelatex -output-directory=compiled_reports -cd "$file"
            done

      # 第 3 步 (关键修改): 在 Release 前详细检查编译产物
      - name: 检查编译产物目录 (Check Compiled Reports Directory)
        run: |
          echo "--- 调试输出：检查 compiled_reports 目录内容 ---"
          if [ -d "compiled_reports" ]; then
            echo "'compiled_reports' 目录存在。"
            echo "目录内容如下:"
            # -l 参数可以显示文件大小等详细信息，方便判断文件是否为空
            ls -l compiled_reports/
          else
            echo "错误: 'compiled_reports' 目录不存在！编译可能已失败。"
            # exit 1 会让整个工作流失败，方便快速定位问题
            exit 1
          fi
          echo "-------------------------------------------------"

      # 第 4 步：创建新的 Release 并上传原始 PDF
      - name: 创建新的 Release 并上传 PDF (Create New Release and Upload PDFs)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.run_number }}
          name: Build #${{ github.run_number }}
          body: |
            由最新的推送自动编译生成的实验报告。
            Commit: `${{ github.sha }}`
          make_latest: true
          prereslease: true
          files: compiled_reports/*.pdf
