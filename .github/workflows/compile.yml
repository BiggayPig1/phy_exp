# 工作流名称
name: 编译报告并发布到 Release (Compile and Release PDFs)

# 触发条件：推送到 master 分支时
on:
  push:
    branches:
      - master

# 工作流任务
jobs:
  build_and_release:
    # 运行环境
    runs-on: ubuntu-latest
    
    # 授予工作流写入仓库内容的权限
    permissions:
      contents: write

    steps:
      # 第 1 步：检出仓库代码
      - name: 检出仓库代码 (Checkout repository)
        uses: actions/checkout@v2

      # 第 2 步：安装字体、替换字体名并编译所有文件
      - name: 安装字体、替换并编译 (Install, Replace & Compile)
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            apk update && apk add --no-cache font-noto-cjk
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/SimSun/Noto Serif CJK SC/g' {} +
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/SimHei/Noto Sans CJK SC/g' {} +
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/KaiTi/Noto Serif CJK SC/g' {} +
            find . -type f \( -name "*.tex" -o -name "*.cls" \) -exec sed -i 's/FangSong/Noto Serif CJK SC/g' {} +
            mkdir -p compiled_reports
            for file in $(find . -type f -name "*.tex" ! -path "./template/*" ! -path "./大学物理实验-实验报告/*" ! -name "template.tex"); do
              echo "正在编译: $file"
              latexmk -xelatex -output-directory=compiled_reports -cd "$file"
            done

      # 第 3 步：重命名PDF文件以避免API上传错误
      - name: 重命名PDF文件 (Rename PDF files for release)
        run: |
          cd compiled_reports
          i=1
          for file in *.pdf; do
            new_name=$(echo "$file" | sed 's/.pdf//g')
            mv "$file" "report-$i-$new_name.pdf"
            i=$((i+1))
          done
          cd ..

      # 第 4 步：创建新的、唯一的 Release 并上传 PDF
      - name: 创建新的 Release (Create New Release)
        uses: softprops/action-gh-release@v2
        with:
          # 关键修改：为每次运行创建唯一的标签名，例如 build-21, build-22
          tag_name: build-${{ github.run_number }}
          # 关键修改：让 Release 的标题更具信息性
          name: Build #${{ github.run_number }}
          body: |
            由最新的推送自动编译生成的实验报告。
            Commit: `${{ github.sha }}`
          # 关键修改：将这个新版本标记为 "Latest"
          make_latest: true
          prerelease: true
          files: compiled_reports/report-*.pdf
